buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath 'org.wisepersist:gwt-gradle-plugin:1.0.13'
        classpath "gradle.plugin.org.gretty:gretty:3.0.3"
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "com.badlogicgames.gdx:gdx-tools:1.9.14"

    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "GdxWebSockets"
        gdxVersion = '1.10.0'
        roboVMVersion = '2.3.12'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.3'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.1.0'
        libVersion='1.9.1.9.6'
        wsVersion='1.9.10'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

project(":desktop") {
    apply plugin: "java-library"


    dependencies {
        implementation project(":core")
        implementation "com.github.czyzby:gdx-websocket-common:$libVersion"
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

        implementation project(path: ':model')
    }
}

project(":android") {
    apply plugin: "com.android.application"

    configurations { natives }

    dependencies {
        implementation project(":core")
        implementation "com.github.czyzby:gdx-websocket-common:$libVersion"

        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        
    }
}

project(":html") {
    apply plugin: "java-library"
    apply plugin: "gwt"
    apply plugin: "war"
    apply plugin: "org.gretty"


    dependencies {
        implementation project(":core")
        implementation project(":model")
        implementation "com.github.czyzby:gdx-websocket:$libVersion:sources"
        implementation "com.github.czyzby:gdx-websocket-gwt:$libVersion"
        implementation "com.github.czyzby:gdx-websocket-gwt:$libVersion:sources"

        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion"
        api "com.badlogicgames.gdx:gdx:$gdxVersion:sources"
        api "com.badlogicgames.gdx:gdx-backend-gwt:$gdxVersion:sources"
        
    }
}

project(":core") {
    apply plugin: "java-library"

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"

        implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-server:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-client:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-container-grizzly-server:2.0.0'

        implementation "com.github.czyzby:gdx-websocket:$libVersion"
        implementation project(path: ':model')
    }
}

project(":model") {
    apply plugin: "java-library"

    dependencies {
        implementation "com.github.czyzby:gdx-websocket:$libVersion"
    }
}

project(":server") {
    apply plugin: "java-library"

    dependencies {
        implementation "com.github.czyzby:gdx-websocket:$libVersion"
        implementation 'jakarta.websocket:jakarta.websocket-api:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-server:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-client:2.0.0'
        implementation 'org.glassfish.tyrus:tyrus-container-grizzly-server:2.0.0'
        implementation 'com.google.code.gson:gson:2.8.6'
        implementation "com.google.gwt:gwt-servlet:2.9.0"
        implementation project(path: ':model')
    }
}

project.ext.texturePacker = [ "android/assets/", "android/assets/", "miatles" ]

// Import the texture packer
import com.badlogic.gdx.tools.texturepacker.TexturePacker

// Add a new task that packs the textures for you
task texturePacker {
    if (project.ext.has('texturePacker')) {
        logger.info "Calling TexturePacker: "+texturePacker
        TexturePacker.process(texturePacker[0], texturePacker[1], texturePacker[2])
    }
}